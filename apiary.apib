FORMAT: 1A
HOST: https://api-test.cloudloyalty.ru/

# CloudLoyalty API

Процессинг представляет собой веб-приложение, предоставляющее API по протоколу HTTPS.

Все HTTP-запросы выполняются методом POST, тело которого содержит валидный JSON-документ. В ответе возвращается также валидный JSON-документ с необходимыми данными. Соответственно, каждый запрос должен содержать HTTP-заголовки ```Accept: application/json``` и ```Content-Type: application/json```.

Базовый URL процессинга: https://api.cloudloyalty.ru/ (может быть изменен в ходе эксплуатации по договоренности сторон).

### Версия протокола

В каждом запросе может передаваться версия протокола, по которой осуществляется взаимодействие. Номер версии передается в заголовке HTTP-запроса ```X-Processing-Version```:
```
POST https:// api.cloudloyalty.ru/get-balance HTTP/1.1
Accept: application/json
Content-Type: application/json
Cache-Control: no-cache
X-Processing-Version: 1.0

<Request body>
```

Если заголовок не передан, система использует текущую версию протокола. Текущая версия протокола: ```1.0```.

### Аутентификация запросов

Для защиты от несанкционированного доступа к процессингу включает в себя механизм аутентификации запросов.

Каждый запрос должен содержать секретный ключ, который не должен быть известен третьим лицам. Секретный ключ передается в заголовке ```X-Processing-Key``` HTTP-запроса:
```
POST https://api.cloudloyalty.ru/get-balance HTTP/1.1
Accept: application/json
Content-Type: application/json
Cache-Control: no-cache
X-Processing-Version: 1.0
X-Processing-Key: secret_key_string

<Request body>
```

Защита ключа при передаче запроса по сети обеспечивается использованием протокола HTTPS при обращении к процессингу.

При получении запроса, не содержащего ключ, либо содержащего неверный ключ, процессинг возвращает ошибку ```403 Forbidden```.

### Форматы данных

#### Строки
Для строк используется кодировка UTF-8.

#### Дата и время
С целью учёта локального времени при регистрации и выполнении операций отметка даты и времени во всех документах (и выгрузках), пересылаемых между системами форматируется в соответствии с RFC 3339 "Date and Time on the Internet: Timestamps" (http://tools.ietf.org/html/rfc3339).

Пример: ```1996-12-19T16:39:57-08:00```
> This represents 39 minutes and 57 seconds after the 16th hour of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time). Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.


#### Денежные величины
Все денежные величины (стоимость товаров, суммы покупки) указываются в рублях. С технической точки зрения они представляются вещественным числом с фиксированной точностью (2 знака после запятой).

#### Целочисленные величины
К целочисленным величинам относятся: количество товаров, суммы бонусов.

### Обработка ошибок

Основные ошибки принятия запроса обозначаются кодами ответа HTTP:

| Код ответа                      | Описание ошибки                                   |
|---------------------------------|---------------------------------------------------|
| ```404 Not Found```             | Неверный адрес для отправки запроса               |
| ```403 Forbidden```             | Ключ аутентификации не передан или некорректен    |
| ```405 Not Allowed```           | Неверный тип запроса (например, GET вместо POST)  |
| ```500 Internal Server Error``` | Сервер не выполнил запрос из-за внутренней ошибки |

При ответах сервера, отличных от ```200 OK```, тело не содержит JSON-документ.

#### Ошибки процессинга

При возникновении ошибок во время обработки запросов, процессинг формирует ответный JSON документ следующего содержания:
```
{
   "errorCode":1,
   "description":"Чек не обработан процессингом или обработан с ошибкой"
}
```

Параметры ответа:
- ```errorCode``` - цифровой код ошибки
- ```description``` - текстовое описание ошибки

HTTP-код ответа с описанием ошибки - ```200 OK```.


#### Коды ошибок процессинга

| Код       | Описание ошибки                                                 |
|-----------|-----------------------------------------------------------------|
| 1         | Чек не обработан процессингом или обработан с ошибкой           |
| 2         | В запросе к процессингу обнаружена ошибка или неверный вид JSON |
| 3         | Клиент не найден                                                |
| 4         | Аккаунт клиента заблокирован                                    |
| 5         | Не найден магазин                                               |
| 6         | Списание бонусов превышает допустимое значение                  |
| 10        | Возвращаемый товар не найден в чеке продажи                     |
| 11        | Сумма возврата больше суммы продажи                             |
| 13        | Чек продажи не найден на сервере процессинга                    |
| 14        | Чек для отмены не найден                                        |
| 15        | Отмена допускается только для последней операции                |
| 16        | Превышен допустимый интервал времени для отмены операции        |
| 17        | Чек с данным номером уже обработан                              |
| 20        | Номер телефона клиента не валиден                               |
| 21        | Продажа не найдена                                              |
| 22        | Не передан ключ аутентификации                                  |
| 23        | Клиент не аутентифицирован                                      |
| 24        | Клиент с таким номером телефона уже существует                  |
| 25        | Карта уже привязана к другому клиенту                           |

## Создание бонусного счета клиента [/new-client]

Метод создает бонусный счет клиента для последующего начисления и списания бонусов.

Обязательные поля: номер телефона или карта.

### /new-client [POST]

+ Attributes (object)
    + client (object, required)
        + phoneNumber (string) - номер телефона клиента
        + email (string) - адрес электронной почты клиента
        + surname (string) - фамилия отдельно
        + name (string) - имя отдельно
        + patronymicName (string) - отчество отдельно
        + fullName (string) - фамилия, имя и отчество (используется, если нет разбивки по отдельным полям)
        + gender (number) - пол клиента

            Поддерживаемые значения:
            - 0 - пол неизвестен,
            - 1 - мужской,
            - 2 - женский
        
        + birthdate (string) - дата рождения

            Возможные форматы:
            - ```1967-11-21T00:00:00+04:00```
            - ```1967-11-21```
            - ```11-21``` - если известен только день в году

        + card (string) - номер карты для привязки к клиенту

+ Request (application/json)

    + Headers

            Accept: application/json
            X-Processing-Version: 1.0
            X-Processing-Key: 00000000-0000-0000-0000-000000000000

    + Body
    
            {
                "client": {
                    "phoneNumber":"+79251112223",
                    "email":"zhiglov@ya.ru",
                    "fullName":"Жиглов Глеб Евгеньевич",
                    "gender":1,
                    "birthdate":"1967-11-21T00:00:00+04:00",
                    "card":"2222000257859"
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "client": {
                        "type": "object",
                        "properties": {
                            "phoneNumber": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "fullName": {
                                "type": "string"
                            },
                            "surname": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "patronymicName": {
                                "type": "string"
                            },
                            "gender": {
                                "type": "integer",
                                "enum": [0, 1, 2]
                            },
                            "birthdate": {
                                "type": "string",
                                "anyOf": [
                                    {
                                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}[+-][0-9]{2}:[0-9]{2}$"
                                    },
                                    {
                                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
                                    },
                                    {
                                        "pattern": "^[0-9]{2}-[0-9]{2}$"
                                    }
                                ]
                            },
                            "card": {
                                "type": "string",
                                "pattern": "^[0-9]{1,18}$"
                            }
                        },
                        "anyOf": [
                            {
                                "required": [
                                    "phoneNumber"
                                ]
                            },
                            {
                                "required": [
                                    "card"
                                ]
                            }
                        ]
                    }
                },
                "required": [
                    "client"
                ]
            }

+ Response 200 (application/json)

    + Attributes (object)
        + client (object)
            + phoneNumber (string) - номер телефона клиента
            + bonuses (number) -  баланс доступных бонусов
            + pendingBonuses (number) - баланс ожидаемых бонусов
            + fullName (string) - фамилия, имя и отчество
        + bonuses (array)
            + (object)
                + expireAt (string) - дата сгорания бонуса
                + amount (number) - количество бонусов

    + Body

            {
               "client":{
                  "phoneNumber":"+79251112223",
                  "bonuses":1000,
                  "pendingBonuses":400,
                  "fullName":"Жиглов Глеб Евгеньевич"
               },
               "bonuses":[
                  {
                     "expireAt":"2014-12-31T23:55:32+04:00",
                     "amount":100
                  }
               ]
            }

## Получение баланса [/get-balance]

Метод позволяет узнать количество ожидаемых и доступных бонусов на балансе пользователя и ФИО владельца. Также метод возвращает информацию по бонусам, которые сгорят в ближайшие 30 дней.

Делать запрос можно либо по номеру телефна клиента, либо по номеру карты.

### /get-balance [POST]

+ Attributes
    + phoneNumber (string) - номер телефона клиента, по которому идет расчёт баланса
    + card (string) - карта клиента

+ Request (application/json)

    + Headers

            Accept: application/json
            X-Processing-Version: 1.0
            X-Processing-Key: 00000000-0000-0000-0000-000000000000

    + Body

            {
                "phoneNumber":"+79251112223"
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "string"
                    },
                    "card": {
                        "type": "string",
                        "pattern": "^[0-9]{1,18}$"
                    }
                },
                "anyOf": [
                    {
                        "required": [
                            "phoneNumber"
                        ]
                    },
                    {
                        "required": [
                            "card"
                        ]
                    }
                ]
            }

+ Response 200 (application/json)

    + Attributes (object)
        + client (object)
            + phoneNumber (string) - номер телефона клиента
            + bonuses (number) -  баланс доступных бонусов
            + pendingBonuses (number) - баланс ожидаемых бонусов
            + fullName (string) - фамилия, имя и отчество
        + bonuses (array)
            + (object)
                + expireAt (string) - дата сгорания бонуса
                + amount (number) - количество бонусов

    + Body

            {
               "client":{
                  "phoneNumber":"+79251112223",
                  "bonuses":1000,
                  "pendingBonuses":400,
                  "fullName":"ФИО"
               },
               "bonuses":[
                  {
                     "expireAt":"2014-12-31T23:55:32+04:00",
                     "amount":100
                  }
               ]
            }

## Обновление информации о клиенте [/update-client]

Метод изменяет данные о клиенте.

Делать запрос можно либо по номеру телефна клиента, либо по номеру карты.

### /update-client [POST]

+ Attributes (object)
    + phoneNumber (string) - номер телефона клиента
    + card (string) - карта клиента
    + client (object, required) - поля для обновления
        + phoneNumber (string) - новый номер телефона клиента
        + email (string) - новый адрес электронной почты клиента
        + surname (string) - новая фамилия отдельно
        + name (string) - новое имя отдельно
        + patronymicName (string) - новое отчество отдельно
        + fullName (string) - новые фамилия, имя и отчество (используется, если нет разбивки по отдельным полям)
        + gender (number) - новый пол клиента

            Поддерживаемые значения:
            - 0 - пол неизвестен,
            - 1 - мужской,
            - 2 - женский
        
        + birthdate (string) - новая дата рождения

            Возможные форматы:
            - ```1967-11-21T00:00:00+04:00```
            - ```1967-11-21```
            - ```11-21``` - если известен только день в году

        + card (string) - новый номер карты для привязки к клиенту

            Старая карта будет отвязана от клиента. Баланс бонусов, история покупок и статистика по клиенту сохранятся за клиентом и будут доступны по новой карте.

        + isEmailSubscribed (boolean) - флаг, подписан ли клиент на маркетинговые рассылки по электронной почте
        + isPhoneSubscribed (boolean) - флаг, подписан ли клиент на маркетинговые рассылки по SMS или Viber

+ Request (application/json)

    + Headers

            Accept: application/json
            X-Processing-Version: 1.0
            X-Processing-Key: 00000000-0000-0000-0000-000000000000

    + Body
    
            {
                "phoneNumber":"+79251112223",
                "client": {
                    "email":"zhiglov20@ya.ru",
                    "isEmailSubscribed": true
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "string"
                    },
                    "card": {
                        "type": "string",
                        "pattern": "^[0-9]{1,18}$"
                    },
                    "client": {
                        "type": "object",
                        "properties": {
                            "phoneNumber": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "surname": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "patronymicName": {
                                "type": "string"
                            },
                            "fullName": {
                                "type": "string"
                            },
                            "gender": {
                                "type": "integer",
                                "enum": [0, 1, 2]
                            },
                            "birthdate": {
                                "type": "string",
                                "anyOf": [
                                    {
                                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}[+-][0-9]{2}:[0-9]{2}$"
                                    },
                                    {
                                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
                                    },
                                    {
                                        "pattern": "^[0-9]{2}-[0-9]{2}$"
                                    }
                                ]
                            },
                            "card": {
                                "type": "string",
                                "pattern": "^[0-9]{1,18}$"
                            },
                            "isEmailSubscribed": {
                                "type": "boolean"
                            },
                            "isPhoneSubscribed": {
                                "type": "boolean"
                            }
                        }
                    }
                },
                "anyOf": [
                    {
                        "required": [
                            "phoneNumber",
                            "client"
                        ]
                    },
                    {
                        "required": [
                            "card",
                            "client"
                        ]
                    }
                ]
            }

+ Response 200 (application/json)

    + Attributes (object)
        + client (object)
            + phoneNumber (string) - номер телефона клиента
            + bonuses (number) -  баланс доступных бонусов
            + pendingBonuses (number) - баланс ожидаемых бонусов
            + fullName (string) - фамилия, имя и отчество
        + bonuses (array)
            + (object)
                + expireAt (string) - дата сгорания бонуса
                + amount (number) - количество бонусов

    + Body

            {
               "client":{
                  "phoneNumber":"+79251112223",
                  "bonuses":1000,
                  "pendingBonuses":400,
                  "fullName":"Жиглов Глеб Евгеньевич"
               },
               "bonuses":[
                  {
                     "expireAt":"2014-12-31T23:55:32+04:00",
                     "amount":100
                  }
               ]
            }

## Расчёт покупки [/calculate-purchase]

Запрос расчета бонусов предназначен для предварительного расчёта количества бонусов к списанию и/или начислению при покупке с использованием системы лояльности. 

Реального начисления/списания бонусов не происходит, система лояльности только делает расчёт.

В случае изменения чека необходимо отправить запрос заново.

Делать запрос можно либо по номеру телефна клиента, либо по номеру карты.

### /calculate-purchase [POST]

+ Attributes (object)
    + calculate (object, required)
        + phoneNumber (string) - номер телефона клиента, по которому нужно произвести расчёт продажи
        + card (string) - карта клиента
        + totalAmount (number, required) - общая сумма чека до вычета бонусов

            Значение должно учитывать скидки, применяемые магазином.

            Для указанной суммы будет расчитано количество бонусов для накопления клиентом (если выбрана операция collect).

            Из этой суммы будет вычтено количество бонусов, заданных в applyBonuses, а от результата вычитания расчитано количество бонусов для накопления клиентом (если выбрана операция apply-collect).

        + applyingAmount (number) - сумма для расчета применяемых бонусов

            Магазин может расчитывать эту сумму как totalAmount, за вычетом стоимости товаров, к которым запрещено применять бонусы.

            Не может превышать totalAmount.

            Если не указана, считается равной totalAmount.

            Для указанной суммы будет расчитано количество бонусов, которыми можно погасить покупку (если выбрана операция apply или apply-collect).

        + loyaltyAction (string) - выбранная операция с бонусами по данному чеку
    
            Возможны следующие значения:
            - collect - бонусы будут только начислены для клиента
            - apply - бонусы будут только списаны с клиента
            - apply-collect - бонусы будут сначала списаны, а затем начислены на оставшуюся сумму для клиента

        + applyBonuses (number) - количество используемых бонусов для покупки

            Не может превышать количество доступных бонусов клиента.

            Если не задано, используются все доступные бонусы.

        + collectBonuses (number) - количество бонусов, которые будут начислены клиенту за покупку, расчитанное вызывающей стороной
        
            Если не задано, расчитывается автоматически.


+ Request (application/json)

    + Headers

            Accept: application/json
            X-Processing-Version: 1.0
            X-Processing-Key: 00000000-0000-0000-0000-000000000000

    + Body

            {
               "calculate":{
                  "phoneNumber":"+79251112223",
                  "totalAmount":50000.00,
                  "loyaltyAction":"apply-collect"
               }
            }

+ Response 200 (application/json)

    + Attributes (object)
        + calculation (object)
            + phoneNumber (string) - номер телефона клиента
            + totalAmount (number) - общая сумма
            + collectableBonuses (number) - общая сумма бонусов, начисляемая на чек при выборе операции «Начисление»
            + appliableBonuses (number) - максимальная сумма бонусов, доступная для списания по чеку при выборе операции «Списание»

    
    + Body
    
            {
               "calculation":{
                  "phoneNumber":"+79251112223",
                  "totalAmount":49000.00,
                  "collectableBonuses":1000,
                  "appliableBonuses":4900
               }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "positiveAmount": {
                        "type": "number",
                        "minimum": 0,
                        "exclusiveMinimum": true
                    }
                },
                "type": "object",
                "properties": {
                    "calculate": {
                        "type": "object",
                        "properties": {
                            "phoneNumber": {
                                "type": "string"
                            },
                            "card": {
                                "type": "string",
                                "pattern": "^[0-9]{1,18}$"
                            },
                            "totalAmount": {
                                "$ref": "#/definitions/positiveAmount"
                            },
                            "doApplyBonuses": {
                                "type": "boolean",
                                "default": true
                            },
                            "doCollectBonuses": {
                                "type": "boolean",
                                "default": true
                            },
                            "applyingAmount": {
                                "type": "number",
                                "minimum": 0
                            },
                            "loyaltyAction": {
                                "enum": [
                                    "collect",
                                    "apply",
                                    "apply-collect"
                                ]
                            },
                            "applyBonuses": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "collectBonuses": {
                                "type": "integer",
                                "minimum": 0
                            }
                        },
                        "required": [
                            "totalAmount"
                        ],
                        "anyOf": [
                            {
                                "required": [
                                    "phoneNumber"
                                ]
                            },
                            {
                                "required": [
                                    "card"
                                ]
                            }
                        ]
                    }
                },
                "required": [
                    "calculate"
                ]
            }

## Выполнение покупки [/apply-purchase]

Метод выполняет операцию начисления и/или списания бонусов.

Возможны три варианта работы с бонусами:
- Только начисление бонусов клиенту 
- Только списание бонусов с клиента
- Сначала списать бонусы с клиента, а затем начислить на оставшуюся оплаченную денежными средствами сумму их снова.

Для операций списания и списания-и-начисления в запросе передаются суммы списания бонусов на весь чек. Общая сумма списания бонусов не должны превышать значения, полученные в результате выполнения метода расчета покупки. Запрос предполагает наличие информации обо всех товарах в чеке и типе продажи.

Делать запрос можно либо по номеру телефна клиента, либо по номеру карты.

### /apply-purchase [POST]

+ Attributes (object)
    + transaction (object, required)
        + phoneNumber (string) - номер телефона клиента, по которому производиться продажа
        + card (string) - карта клиента
        + id (string, required) - номер транзакции или чека в системе партнера (из 1С)
        + executedAt (string, required) - дата и время совершения транзакции
        + shopCode (string, required) - код магазина, в котором осуществляется операция
        + shopName (string, required) - полное название магазина, в котором осуществляется операция 
        + cashier (string) - имя продавца, который оформил продажу товара
        + cashierId (string) - табельный номер продавца, который оформил продажу товара
        + totalAmount (number, required) - общая сумма чека до вычетащккус бонусов

            Значение должно учитывать скидки, применяемые магазином.

            Для указанной суммы будет расчитано количество бонусов для накопления клиентом (если выбрана операция collect).

            Из этой суммы будет вычтено количество бонусов, заданных в applyBonuses, а от результата вычитания расчитано количество бонусов для накопления клиентом (если выбрана операция apply-collect).

        + applyingAmount (number) - сумма для расчета применяемых бонусов

            Магазин может расчитывать эту сумму как totalAmount, за вычетом стоимости товаров, к которым запрещено применять бонусы.

            Не может превышать totalAmount.

            Если не указана, считается равной totalAmount.

            Для указанной суммы будет расчитано количество бонусов, которыми можно погасить покупку (если выбрана операция apply или apply-collect).

        + loyaltyAction (string, required) - выбранная операция с бонусами по данному чеку
    
            Возможны следующие значения:
            - collect - бонусы будут только начислены для клиента
            - apply - бонусы будут только списаны с клиента
            - apply-collect - бонусы будут сначала списаны, а затем начислены на оставшуюся сумму для клиента

        + applyBonuses (number, required) - количество используемых бонусов для покупки

            Не может превышать количество доступных бонусов клиента.

            Не может превышать максимальное количество бонусов к применению, расчитанное на основе applyingAmount.

        + collectBonuses (number) - количество бонусов, которые будут начислены клиенту за покупку, расчитанное вызывающей стороной
        
            Если не задано, расчитывается автоматически.

        + items (array) - список позиций в чеке
            + (object)
                + sku (string, required) - артикул товара
                + itemTitle (string, required) - название товара
                + itemCount (number, required) - количество товара в чеке
                + price (number, required) - цена единицы товара
                + amount (number) - сумма

                    Если не указана, расчитывается как price * itemCount.

+ Request (application/json)

    + Headers

            Accept: application/json
            X-Processing-Version: 1.0
            X-Processing-Key: 00000000-0000-0000-0000-000000000000

    + Body

            {
               "transaction":{
                  "phoneNumber":"+79251112223",
                  "id":"ATR0000000000001235",
                  "executedAt":"2014-05-30T13:45:32+04:00",
                  "shopCode":"ATR",
                  "shopName":"Atrium",
                  "cashier":"Иванов Иван Иванович",
                  "cashierId":"A0000275",
                  "totalAmount":50000.00,
                  "loyaltyAction":"apply-collect",
                  "applyBonuses":1000,
                  "items":[
                     {
                        "sku":"MD775RU/A",
                        "itemTitle":"Товар для продажи",
                        "itemCount":2,
                        "price":50000.00
                     }
                  ]
               }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "positiveAmount": {
                        "type": "number",
                        "minimum": 0,
                        "exclusiveMinimum": true
                    }
                },
                "type": "object",
                "properties": {
                    "transaction": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "executedAt": {
                                "type": "string",
                                "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}[+-][0-9]{2}:[0-9]{2}$"
                            },
                            "phoneNumber": {
                                "type": "string"
                            },
                            "card": {
                                "type": "string",
                                "pattern": "^[0-9]{1,18}$"
                            },
                            "loyaltyAction": {
                                "enum": [
                                    "collect",
                                    "apply",
                                    "apply-collect"
                                ]
                            },
                            "shopCode": {
                                "type": "string",
                                "minLength": 1
                            },
                            "shopName": {
                                "type": "string"
                            },
                            "cashier": {
                                "type": "string"
                            },
                            "cashierId": {
                                "type": "string"
                            },
                            "totalAmount": {
                                "$ref": "#/definitions/positiveAmount"
                            },
                            "applyBonuses": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "collectBonuses": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "items": {
                                "type": "array",
                                "minItems": 1,
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "sku": {
                                            "type": "string"
                                        },
                                        "itemTitle": {
                                            "type": "string"
                                        },
                                        "itemCount": {
                                            "type": "number",
                                            "minimum": 0,
                                            "exclusiveMinimum": true
                                        },
                                        "price": {
                                            "type": "number",
                                            "minimum": 0
                                        },
                                        "amount": {
                                            "type": "number",
                                            "minimum": 0
                                        },
                                        "category": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "sku",
                                        "itemTitle",
                                        "itemCount",
                                        "price"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "id",
                            "executedAt",
                            "loyaltyAction",
                            "shopCode",
                            "shopName",
                            "totalAmount",
                            "applyBonuses"
                        ],
                        "anyOf": [
                            {
                                "required": [
                                    "phoneNumber"
                                ]
                            },
                            {
                                "required": [
                                    "card"
                                ]
                            }
                        ]
                    }
                },
                "required": [
                    "transaction"
                ]
            }

+ Response 200 (application/json)

    + Attributes (object)
        + confirmation (object)
            + phoneNumber - номер телефона клиента
            + purchaseId - номер транзакции покупки в системе партнера (чек в 1С)
            + totalAmount - общая сумма чека
            + paidAmount - сумма к оплате, оставшаяся после погашения части общей суммы примененными бонусами 
            + bonuses - обновлённая информация о бонусах клиента
                + applied - количество потраченных бонусов за транзакцию
                + collected - количество накопленных бонусов
                
                    В зависимости от операции, поля applied и collected могут иметь значение 0.
                
                + pending - количество ожидаемых бонусов для использования
                
                    Поле pending будет содержать значение collected и ожидаемых бонусов до совершения транзакции.
                
                + available - количество доступных бонусов



    + Body

            {
               "confirmation":{
                  "phoneNumber":"+79251112223",
                  "purchaseId":"ATR0000000000001235",
                  "totalAmount":50000.00,
                  "paidAmount":49000.00,
                  "bonuses":{
                     "applied":1000,
                     "collected":10,
                     "pending":410,
                     "available":0
                  }
               }
            }

## Расчет возврата товара [/calculate-return]

Запрос расчета возврата товара предназначен для предварительного расчёта количества ожидаемых бонусов, которое будет списано с клиента. 

Реального аннулирования бонусов не происходит, система лояльности только делает расчёт. 

Делать запрос можно либо по номеру телефна клиента, либо по номеру карты.

### /calculate-return [POST]

+ Attributes (object)
    + calculate (object, required)
        + phoneNumber (string) - номер телефона клиента
        + card (string) - карта клиента
        + purchaseId (string, required) - номер транзакции в системе партнера при покупке товара (чек в 1С)
        + refundAmount (number, required) - общая сумма возвращаемого товара

+ Request (application/json)

    + Headers

            Accept: application/json
            X-Processing-Version: 1.0
            X-Processing-Key: 00000000-0000-0000-0000-000000000000

    + Body

            {
               "calculate":{
                  "phoneNumber":"+79251112223",
                  "purchaseId":"ATR0000000000001235",
                  "refundAmount":9000.00
               }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "positiveAmount": {
                        "type": "number",
                        "minimum": 0,
                        "exclusiveMinimum": true
                    }
                },
                "type": "object",
                "properties": {
                    "calculate": {
                        "type": "object",
                        "properties": {
                            "purchaseId": {
                                "type": "string"
                            },
                            "phoneNumber": {
                                "type": "string"
                            },
                            "card": {
                                "type": "string",
                                "pattern": "^[0-9]{1,18}$"
                            },
                            "refundAmount": {
                                "$ref": "#/definitions/positiveAmount"
                            }
                        },
                        "required": [
                            "purchaseId",
                            "refundAmount"
                        ],
                        "anyOf": [
                            {
                                "required": [
                                    "phoneNumber"
                                ]
                            },
                            {
                                "required": [
                                    "card"
                                ]
                            }
                        ]
                    }
                },
                "required": [
                    "calculate"
                ]
            }

+ Response 200 (application/json)

    + Attributes (object)
        + calculation (object)
            + phoneNumber (string) - номер телефона клиента
            + purchaseId (string) - номер транзакции в системе партнера при покупку товара (чек в 1С)
            + refundAmount (number) - общая сумма возвращаемого товара 
            + collectedBonuses (number) - количество бонусов полученных при совершении покупки
            + cancelledBonuses (number) - ожидаемое количество бонусов для отмены

    + Body

            {
               "calculation":{
                  "phoneNumber":"+79251112223",
                  "purchaseId":"ATR0000000000001235",
                  "refundAmount":9000.00,
                  "collectedBonuses":49,
                  "cancelledBonuses":9
               }
            }

## Возврат товара [/apply-return]

Метод совершает аннулирование/перерасчет ожидаемых бонусов полученных при совершении покупки. Запрос предполагает наличие информации обо всех товарах в возврате. 

Делать запрос можно либо по номеру телефна клиента, либо по номеру карты.

### /apply-return [POST]

+ Attributes (object)
    + transaction (object, required)
        + phoneNumber (string) - номер телефона клиента, по которому нужно вернуть товар
        + card (string) - карта клиента
        + id (string, required) - номер транзакции возврата в системе партнера (из 1С)
        + executedAt (string, required) - дата и время совершения транзакции
        + purchaseId (string, required) - номер транзакции/чека при совершении покупки товара в системе партнера (из 1С) 
        + refundAmount (number, required) - общая сумма возвращаемых товаров
        + shopCode (string, required) - код магазина, в котором осуществляется операция
        + shopName (string, required) - полное название магазина, в котором осуществляется операция 
        + cashier (string) - имя продавца, который оформил возврат товара
        + cashierId (string) - табельный номер продавца, который оформил возврат товара 
        + items (array) - список товаров для возврата
            + (object)
                + sku (string, required) - артикул товара для возврата
                + itemTitle (string, required) - название товара
                + itemCount (number, required) - количество товара в чеке
                + price (number, required) - цена единицы товара
                + amount (number) - сумма

                    Если не указана, расчитывается как price * itemCount.

+ Request (application/json)

    + Headers

            Accept: application/json
            X-Processing-Version: 1.0
            X-Processing-Key: 00000000-0000-0000-0000-000000000000

    + Body

            {
               "transaction":{
                  "phoneNumber":"+79251112223",
                  "id":"ATR0000000000001236",
                  "executedAt":"2014-05-30T13:45:32+04:00",
                  "purchaseId":"ATR0000000000001235",
                  "refundAmount":9000.00,
                  "shopCode":"ATR",
                  "shopName":"Atrium",
                  "cashier":"Иванов Иван Иванович",
                  "cashierId":"A0000275",
                  "items":[
                     {
                        "sku":"MD772RU/A",
                        "itemTitle":"Товар для продажи",
                        "itemCount":2,
                        "price":4500.00
                     }
                  ]
               }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "definitions": {
                    "positiveAmount": {
                        "type": "number",
                        "minimum": 0,
                        "exclusiveMinimum": true
                    }
                },
                "type": "object",
                "properties": {
                    "transaction": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "purchaseId": {
                                "type": "string"
                            },
                            "executedAt": {
                                "type": "string",
                                "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}[+-][0-9]{2}:[0-9]{2}$"
                            },
                            "phoneNumber": {
                                "type": "string"
                            },
                            "card": {
                                "type": "string",
                                "pattern": "^[0-9]{1,18}$"
                            },
                            "refundAmount": {
                                "$ref": "#/definitions/positiveAmount"
                            },
                            "shopCode": {
                                "type": "string",
                                "minLength": 1
                            },
                            "shopName": {
                                "type": "string"
                            },
                            "cashier": {
                                "type": "string"
                            },
                            "cashierId": {
                                "type": "string"
                            },
                            "items": {
                                "type": "array",
                                "minItems": 1,
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "sku": {
                                            "type": "string"
                                        },
                                        "itemTitle": {
                                            "type": "string"
                                        },
                                        "itemCount": {
                                            "type": "number",
                                            "minimum": 0,
                                            "exclusiveMinimum": true
                                        },
                                        "price": {
                                            "type": "number",
                                            "minimum": 0
                                        },
                                        "amount": {
                                            "type": "number",
                                            "minimum": 0
                                        },
                                        "category": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "sku",
                                        "itemTitle",
                                        "itemCount",
                                        "price"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "id",
                            "purchaseId",
                            "executedAt",
                            "refundAmount",
                            "shopCode",
                            "shopName"
                        ],
                        "anyOf": [
                            {
                                "required": [
                                    "phoneNumber"
                                ]
                            },
                            {
                                "required": [
                                    "card"
                                ]
                            }
                        ]
                    }
                },
                "required": [
                    "transaction"
                ]
            }

+ Response 200 (application/json)

    + Attributes (object)
        + confirmation (object)
            + phoneNumber (number) - номер телефона клиента
            + refundId (string) - номер транзакции для возврата товара в системе партнера
            + refundAmount (number) - общая сумма возвращённого товара
            + cancelledBonuses (number) - количество аннулированных бонусов 

    + Body

            {
               "confirmation":{
                  "phoneNumber":"+79251112223",
                  "refundId":"ATR0000000000001236",
                  "refundAmount":9000.00,
                  "cancelledBonuses":9
               }
            }

## Отмена операции [/revert-purchase]

Используется для отмены операций покупки, при возникновении ошибок во время обработки кассовой операции.

Важно: Допускается отменять только последнюю проведенную операцию по клиенту. Отмена доступна в течение 30 минут после совершения операции.

Делать запрос можно либо по номеру телефна клиента, либо по номеру карты.

### /revert-purchase [POST]

+ Attributes
    + transaction (object, required)
        + phoneNumber (string) - номер телефона клиента, по которому нужно произвести расчёт продажи
        + card (string) - карта клиента
        + id (string, required) - номер транзакции отмены покупки в системе партнера (из 1С)
        + executedAt (string, required) - дата и время совершения транзакции 
        + purchaseId (string, required) - номер транзакции покупки в системе партнера (чек в 1С)

+ Request (application/json)

    + Headers

            Accept: application/json
            X-Processing-Version: 1.0
            X-Processing-Key: 00000000-0000-0000-0000-000000000000

    + Body

            {
               "transaction":{
                  "phoneNumber":"+79251112223",
                  "id":"ATR0000000000001236",
                  "executedAt":"2014-05-30T13:45:32+04:00",
                  "purchaseId":"ATR0000000000001235"
               }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "transaction": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "executedAt": {
                                "type": "string",
                                "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}[+-][0-9]{2}:[0-9]{2}$"
                            },
                            "phoneNumber": {
                                "type": "string"
                            },
                            "card": {
                                "type": "string",
                                "pattern": "^[0-9]{1,18}$"
                            },
                            "purchaseId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "executedAt",
                            "purchaseId"
                        ],
                        "anyOf": [
                            {
                                "required": [
                                    "phoneNumber"
                                ]
                            },
                            {
                                "required": [
                                    "card"
                                ]
                            }
                        ]
                    }
                },
                "required": [
                    "transaction"
                ]
            }

+ Response 200 (application/json)

    + Attributes (object)
        + confirmation (object)
            + phoneNumber - номер телефона клиента 
            + expectedBonuses - баланс ожидаемых бонусов
            + availableBonuses - баланс доступных бонусов 
            + cancelledBonuses - количество отмененных бонусов

    + Body

            {
               "confirmation":{
                  "phoneNumber":"+79251112223",
                  "expectedBonuses":400,
                  "availableBonuses":1000,
                  "cancelledBonuses":100
               }
            }